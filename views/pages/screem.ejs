<%- contentFor('body') %>
    <style>
        body {
            height: 100vh;
            margin: 0;
        }

        .video-container {
            width: 100%;
            max-width: 360px;
            /* Ajustável conforme necessário */
            aspect-ratio: 9 / 16;
        }

        video {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
    </style>
    <div class="container justify-content-center mb-3">
        <h1 class="text-center">Tirar Foto ou Adicionar Imagem</h1>
        <div class="row justify-content-center"">
            <div class=" col mb-3 video-container">
            <video id="video" width="100%" height="90vh" style="max-width: 360px;" autoplay></video>
            <br>
            <input class="file" type="file" id="upload" accept="image/*">
            <br>
            <button class="btn btn-primary" id="capture">Tirar Foto</button>
            <button class="btn btn-warning" id="clear">Limpar Imagem</button>
        </div>
        <div class="col video-container  mb-3">
            <canvas id="canvas" width="325" height="650" style="max-width: 360px;background-color: #969494;"></canvas>
        </div>
        <button class="btn btn-primary" id="save">Salvar Imagem</button>
    </div>
    <div class="row justify-content-center mt-3">
        <button class="btn btn-success" id="share">Compartilhar</button>
    </div>

    <div class="container">
        <div class="row">
            <% items.forEach(function(image, index) { %>
                <div class="col-md-4 text-center mb-4">
                    <div style="padding: 10px;">
                        <img width="60%" onclick="selectMessage(this)" style="background-color: #969494;"" src="
                            /uploads/<%=image.img.data %>"
                        alt="<%= image.name %>">
                            <div>
                                <h5>
                                    <%= image.name %>
                                </h5>
                                <p>
                                    <%= image.desc %>
                                </p>
                            </div>
                    </div>
                </div>
                <% if ((index + 1) % 3===0) { %>
        </div>
        <div class="row">
            <% } %>
                <% }); %>
        </div>
    </div>
    </div>

    </div>
    <script>
        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const ctx = canvas.getContext('2d');
        const captureBtn = document.getElementById('capture');
        const clearButton = document.getElementById('clear');
        const uploadInput = document.getElementById('upload');
        const saveBtn = document.getElementById('save');
        const shareButton = document.getElementById('share');

        const frame = new Image();
        frame.src = '';

        frame.onload = () => {
            captureBtn.addEventListener('click', () => {
                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
                ctx.drawImage(frame, 0, 0, canvas.width, canvas.height);
            });
        };

        clearButton.addEventListener('click', () => {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            upload.value = '';
            frame.src = '';
        });

        navigator.mediaDevices.getUserMedia({ video: true })
            .then(stream => {
                video.srcObject = stream;
            })
            .catch(error => console.error(error));

        uploadInput.addEventListener('change', (event) => {
            if (frame.src === '') {
                alert('Selecione seu background')
                return;
            }
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = (e) => {
                    const img = new Image();
                    img.onload = () => {
                        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
                        ctx.drawImage(frame, 0, 0, canvas.width, canvas.height);
                    };
                    img.src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        });

        saveBtn.addEventListener('click', () => {
            const link = document.createElement('a');
            link.download = 'foto_com_moldura.png';
            link.href = canvas.toDataURL();
            link.click();
        });


        function selectMessage(img) {
            frame.src = img.src
            ctx.drawImage(frame, 0, 0, canvas.width, canvas.height);
        }

        shareButton.addEventListener('click', async () => {
            const dataURL = await compressImage(canvas.toDataURL('image/png'));
            const baseURL = window.location.origin;
            console.log(`${baseURL}/images/${dataURL}`)

            if (navigator.share) {
                navigator.share({
                    title: 'Compartilhar Imagem',
                    text: 'Veja esta imagem incrível!',
                    url: `${baseURL}/images/${dataURL}`
                }).then(() => {
                    console.log('Successful share');
                }).catch((error) => {
                    console.log('Error sharing', error);
                });
            } else {
                // Fallback for browsers that do not support the Web Share API
                const shareUrl = encodeURIComponent(dataURL);
                const facebookUrl = `https://www.facebook.com/sharer/sharer.php?u=${shareUrl}`;
                const twitterUrl = `https://twitter.com/intent/tweet?url=${shareUrl}&text=Veja esta imagem incrível!`;
                const linkedinUrl = `https://www.linkedin.com/shareArticle?mini=true&url=${shareUrl}&title=Compartilhar Imagem&summary=Veja esta imagem incrível!`;

                window.open(facebookUrl, '_blank');
                window.open(twitterUrl, '_blank');
                window.open(linkedinUrl, '_blank');
            }
        });


        function compressImage(base64String, quality = 0.5) {
            return new Promise((resolve) => {
                const img = new Image();
                img.src = base64String;
                img.onload = () => {
                    const canvas = document.createElement("canvas");
                    const ctx = canvas.getContext("2d");

                    canvas.width = img.width;
                    canvas.height = img.height;
                    ctx.drawImage(img, 0, 0);

                    resolve(canvas.toDataURL("image/png", quality)); // Reduz a qualidade
                };
            });
        }

    </script>